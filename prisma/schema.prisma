// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String  @id @default(cuid())
  email   String  @unique
  name    String
  points  Int     @default(0)
  role    Role    @default(USER)
  votes   Vote[]
  created DateTime @default(now())
  updated DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Category {
  id      String  @id @default(cuid())
  name    String  @unique
  candidates Candidate[]
  created DateTime @default(now())
  updated DateTime @updatedAt
}

model Candidate {
  id      String  @id @default(cuid())
  name    String  @unique
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  votes   Vote[]
  created DateTime @default(now())
  updated DateTime @updatedAt
}

model Vote {
  id      String  @id @default(cuid())
  user    User    @relation(fields: [userId], references: [id])
  userId  String
  candidate Candidate @relation(fields: [candidateId], references: [id])
  candidateId String
  pointsUsed Int
  created DateTime @default(now())
  updated DateTime @updatedAt
}